<?xml version="1.0"?>
<section xml:id="classes_objects-revisited">
  <title>Objects Revisited</title>
  <p>In Python, every value is actually an object. Lists, strings, and even integers are all objects.  Programs manipulate those objects either by performing
            computation with them or by asking them to perform methods.  To be more specific, we say that an object has
            a <term>state</term> and a collection of <term>methods</term> that it can perform. (More about <term>methods</term> below.) The state of an object represents those things
            that the object knows about itself.  The state is stored in <term>instance variables</term>. For example, as we have seen with lists, each list has a state consisting
            of the list's contents.  All lists provide methods that allow us to modify the state: <c>append</c>, <c>sort</c>, <c>clear</c> and so on.  Individual lists are different in that even though they are
            all lists, they each have different states (different contents).</p>
  <image source="Classes/Figures/objectpic1.png" width="50%" alt="Simple object has state and methods"/>
</section>
