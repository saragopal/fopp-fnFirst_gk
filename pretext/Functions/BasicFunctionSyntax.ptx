<?xml version="1.0"?>
<section xml:id="functions_basic-function-syntax">
  <title>Basic Function Syntax</title>

<p>Below is the same <c>say_hello()</c> function that was examined in the previous section, although the main program
     is a bit different. Notice &#8212;
     <ol>
        <li>Lines 1-3 define the function "say_hello"</li>
        <li>Line 6 is a call to <c>say_hello()</c></li>
        <li>Lines 5 and 7 are print statements that are <em>not</em> inside the function definition.</li>
     </ol>You can see that there is a <term>function definition</term>
 </p>

<program xml:id="ac4_5_1a" interactive="activecode" language="python" label="ac4_5_1a">
    <input>
    def say_hello():
        print("Hello, world")
        print("Have a great day!")

    print("--before the function call--")
    say_hello()    
    print("--after the function call--")
    </input>
  </program>


<p>As already stated, the code above defines a function called "say_hello". The python intepreter expects 
the programmer to follow a set of <term>syntax rules</term> so that it can run correctly. The syntax rules for defining a function
include &#8212; 
</p> 
<ol>
    <li><p>The signature (line 1) includes:
        <ul>
            <li>The key word <c>def</c> announces that a function is getting defined </li>
            <li>The name of the function (following the same rules as choosing a variable name) </li>
            <li>A pair of parentheses (for now, those parens are empty).</li>
            <li>a colon <c>;</c></li>
        </ul>
    </p></li>
    <li><p>The function body (lines 2 and 3) &#8212; The <em>body</em> of the function is the line(s) of
     code that the function executes each time it is called.
        <ul>
            <li>The body of the function is <em>indented</em>. Functions can include one or many
            lines of code to "do its job".</li>
            <li>After the last line of code for a function body, the next line(s) of code should
                <em>not</em> be indented. Notice that lines 5,6, and 7 are not indented, and not 
                part of the function body!</li>
        </ul>
    </p></li>
</ol>

<note><p>
    Tabs matter! It is unique to Python that a tab (indent) have meaning in houw programs are run. In most other
     programming languages, we use tabs and spacing for human readability. In Python, we use tabs intentionally
     as part of our code. If an indent is <em>incorrect</em> a program may not run, or may not run as intended.  </p>
</note>
<p>The function <c>say_hello()</c> in this section is <em>very basic</em>. Most of the functions we write will be
     more complex and more interesting. In the following sections of this chapter, we will be introducing other parts of
     a function definition and calls to functions.
    </p>
<p>
<term>WARNING: Reading about functions and their syntax is not the same as writing functions from scratch. Until you
    can write functions youself, you have not learned "about functions."
</term>
</p>

</section>
